Nonterminals useless in grammar

   classDeclaration


Terminals unused in grammar

   STATIC
   VOID
   STRING
   CLASS
   EXTENDS
   THIS
   MAIN


Rules useless in grammar

   40 classDeclaration: CLASS ID LFBRACKET varDeclList methodDeclList RFBRACKET
   41                 | CLASS ID EXTENDS ID LFBRACKET varDeclList methodDeclList RFBRACKET


State 24 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: methodDeclList

    2 methodDeclList: %empty
    3               | methodDeclList methodDeclaration

    4 varDeclList: %empty
    5            | varDeclList typeName ID SEMICOLON

    6 paramList: %empty
    7          | nonEmptyParamList

    8 nonEmptyParamList: typeName ID
    9                  | nonEmptyParamList COMMA typeName ID

   10 exp: INTEGER_LITERAL
   11    | exp PLUS exp
   12    | exp MINUS exp
   13    | exp STAR exp
   14    | exp MOD exp
   15    | exp AND exp
   16    | exp OR exp
   17    | exp LESS exp
   18    | TRUE
   19    | FALSE
   20    | exp POINT LENGTH
   21    | ID
   22    | NOT exp
   23    | NEW INT LSBRACKET exp RSBRACKET
   24    | NEW ID LPBRACKET RPBRACKET

   25 statList: %empty
   26         | statList stat

   27 typeName: INT LSBRACKET RSBRACKET
   28         | BOOLEAN
   29         | INT
   30         | ID

   31 visibility: PUBLIC
   32           | PRIVATE

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

   34 stat: LFBRACKET statList RFBRACKET
   35     | IF LPBRACKET exp RPBRACKET stat ELSE stat
   36     | WHILE LPBRACKET exp RPBRACKET stat
   37     | PRINTLN LPBRACKET exp RPBRACKET SEMICOLON
   38     | ID ASSIGN exp SEMICOLON
   39     | ID LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
LPBRACKET (258) 24 33 35 36 37
RPBRACKET (259) 24 33 35 36 37
LFBRACKET (260) 33 34
RFBRACKET (261) 33 34
LSBRACKET (262) 23 27 39
RSBRACKET (263) 23 27 39
SEMICOLON (264) 5 33 37 38 39
PUBLIC (265) 31
PRIVATE (266) 32
STATIC (267)
INT (268) 23 27 29
BOOLEAN (269) 28
VOID (270)
STRING (271)
TRUE (272) 18
FALSE (273) 19
CLASS (274)
EXTENDS (275)
IF (276) 35
ELSE (277) 35
WHILE (278) 36
RETURN (279) 33
PRINTLN (280) 37
LENGTH (281) 20
THIS (282)
NEW (283) 23 24
MAIN (284)
POINT (285) 20
COMMA (286) 9
ASSIGN (287) 38 39
LESS (288) 17
OR (289) 16
AND (290) 15
NOT (291) 22
PLUS (292) 11
MINUS (293) 12
STAR (294) 13
INTEGER_LITERAL (295) 10
ID (296) 5 8 9 21 24 30 33 38 39
MOD (297) 14
VAR_DECL_LIST (298)
METHOD_DECL (299)
STAT_LIST (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
input (47)
    on left: 1, on right: 0
methodDeclList (48)
    on left: 2 3, on right: 1 3
varDeclList (49)
    on left: 4 5, on right: 5 33
paramList (50)
    on left: 6 7, on right: 33
nonEmptyParamList (51)
    on left: 8 9, on right: 7 9
exp (52)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24, on right:
    11 12 13 14 15 16 17 20 22 23 33 35 36 37 38 39
statList (53)
    on left: 25 26, on right: 26 33 34
typeName (54)
    on left: 27 28 29 30, on right: 5 8 9 33
visibility (55)
    on left: 31 32, on right: 33
methodDeclaration (56)
    on left: 33, on right: 3
stat (57)
    on left: 34 35 36 37 38 39, on right: 26 35 36


State 0

    0 $accept: . input $end

    $default  reduce using rule 2 (methodDeclList)

    input           go to state 1
    methodDeclList  go to state 2


State 1

    0 $accept: input . $end

    $end  shift, and go to state 3


State 2

    1 input: methodDeclList .
    3 methodDeclList: methodDeclList . methodDeclaration

    PUBLIC   shift, and go to state 4
    PRIVATE  shift, and go to state 5

    $default  reduce using rule 1 (input)

    visibility         go to state 6
    methodDeclaration  go to state 7


State 3

    0 $accept: input $end .

    $default  accept


State 4

   31 visibility: PUBLIC .

    $default  reduce using rule 31 (visibility)


State 5

   32 visibility: PRIVATE .

    $default  reduce using rule 32 (visibility)


State 6

   33 methodDeclaration: visibility . typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9
    ID       shift, and go to state 10

    typeName  go to state 11


State 7

    3 methodDeclList: methodDeclList methodDeclaration .

    $default  reduce using rule 3 (methodDeclList)


State 8

   27 typeName: INT . LSBRACKET RSBRACKET
   29         | INT .

    LSBRACKET  shift, and go to state 12

    $default  reduce using rule 29 (typeName)


State 9

   28 typeName: BOOLEAN .

    $default  reduce using rule 28 (typeName)


State 10

   30 typeName: ID .

    $default  reduce using rule 30 (typeName)


State 11

   33 methodDeclaration: visibility typeName . ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    ID  shift, and go to state 13


State 12

   27 typeName: INT LSBRACKET . RSBRACKET

    RSBRACKET  shift, and go to state 14


State 13

   33 methodDeclaration: visibility typeName ID . LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    LPBRACKET  shift, and go to state 15


State 14

   27 typeName: INT LSBRACKET RSBRACKET .

    $default  reduce using rule 27 (typeName)


State 15

   33 methodDeclaration: visibility typeName ID LPBRACKET . paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9
    ID       shift, and go to state 10

    $default  reduce using rule 6 (paramList)

    paramList          go to state 16
    nonEmptyParamList  go to state 17
    typeName           go to state 18


State 16

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList . RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    RPBRACKET  shift, and go to state 19


State 17

    7 paramList: nonEmptyParamList .
    9 nonEmptyParamList: nonEmptyParamList . COMMA typeName ID

    COMMA  shift, and go to state 20

    $default  reduce using rule 7 (paramList)


State 18

    8 nonEmptyParamList: typeName . ID

    ID  shift, and go to state 21


State 19

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET . LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    LFBRACKET  shift, and go to state 22


State 20

    9 nonEmptyParamList: nonEmptyParamList COMMA . typeName ID

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9
    ID       shift, and go to state 10

    typeName  go to state 23


State 21

    8 nonEmptyParamList: typeName ID .

    $default  reduce using rule 8 (nonEmptyParamList)


State 22

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET . varDeclList statList RETURN exp SEMICOLON RFBRACKET

    $default  reduce using rule 4 (varDeclList)

    varDeclList  go to state 24


State 23

    9 nonEmptyParamList: nonEmptyParamList COMMA typeName . ID

    ID  shift, and go to state 25


State 24

    5 varDeclList: varDeclList . typeName ID SEMICOLON
   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList . statList RETURN exp SEMICOLON RFBRACKET

    INT      shift, and go to state 8
    BOOLEAN  shift, and go to state 9
    ID       shift, and go to state 10

    ID        [reduce using rule 25 (statList)]
    $default  reduce using rule 25 (statList)

    statList  go to state 26
    typeName  go to state 27


State 25

    9 nonEmptyParamList: nonEmptyParamList COMMA typeName ID .

    $default  reduce using rule 9 (nonEmptyParamList)


State 26

   26 statList: statList . stat
   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList . RETURN exp SEMICOLON RFBRACKET

    LFBRACKET  shift, and go to state 28
    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    RETURN     shift, and go to state 31
    PRINTLN    shift, and go to state 32
    ID         shift, and go to state 33

    stat  go to state 34


State 27

    5 varDeclList: varDeclList typeName . ID SEMICOLON

    ID  shift, and go to state 35


State 28

   34 stat: LFBRACKET . statList RFBRACKET

    $default  reduce using rule 25 (statList)

    statList  go to state 36


State 29

   35 stat: IF . LPBRACKET exp RPBRACKET stat ELSE stat

    LPBRACKET  shift, and go to state 37


State 30

   36 stat: WHILE . LPBRACKET exp RPBRACKET stat

    LPBRACKET  shift, and go to state 38


State 31

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN . exp SEMICOLON RFBRACKET

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 45


State 32

   37 stat: PRINTLN . LPBRACKET exp RPBRACKET SEMICOLON

    LPBRACKET  shift, and go to state 46


State 33

   38 stat: ID . ASSIGN exp SEMICOLON
   39     | ID . LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON

    LSBRACKET  shift, and go to state 47
    ASSIGN     shift, and go to state 48


State 34

   26 statList: statList stat .

    $default  reduce using rule 26 (statList)


State 35

    5 varDeclList: varDeclList typeName ID . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 36

   26 statList: statList . stat
   34 stat: LFBRACKET statList . RFBRACKET

    LFBRACKET  shift, and go to state 28
    RFBRACKET  shift, and go to state 50
    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    PRINTLN    shift, and go to state 32
    ID         shift, and go to state 33

    stat  go to state 34


State 37

   35 stat: IF LPBRACKET . exp RPBRACKET stat ELSE stat

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 51


State 38

   36 stat: WHILE LPBRACKET . exp RPBRACKET stat

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 52


State 39

   18 exp: TRUE .

    $default  reduce using rule 18 (exp)


State 40

   19 exp: FALSE .

    $default  reduce using rule 19 (exp)


State 41

   23 exp: NEW . INT LSBRACKET exp RSBRACKET
   24    | NEW . ID LPBRACKET RPBRACKET

    INT  shift, and go to state 53
    ID   shift, and go to state 54


State 42

   22 exp: NOT . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 55


State 43

   10 exp: INTEGER_LITERAL .

    $default  reduce using rule 10 (exp)


State 44

   21 exp: ID .

    $default  reduce using rule 21 (exp)


State 45

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp . SEMICOLON RFBRACKET

    SEMICOLON  shift, and go to state 56
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 46

   37 stat: PRINTLN LPBRACKET . exp RPBRACKET SEMICOLON

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 65


State 47

   39 stat: ID LSBRACKET . exp RSBRACKET ASSIGN exp SEMICOLON

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 66


State 48

   38 stat: ID ASSIGN . exp SEMICOLON

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 67


State 49

    5 varDeclList: varDeclList typeName ID SEMICOLON .

    $default  reduce using rule 5 (varDeclList)


State 50

   34 stat: LFBRACKET statList RFBRACKET .

    $default  reduce using rule 34 (stat)


State 51

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   35 stat: IF LPBRACKET exp . RPBRACKET stat ELSE stat

    RPBRACKET  shift, and go to state 68
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 52

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   36 stat: WHILE LPBRACKET exp . RPBRACKET stat

    RPBRACKET  shift, and go to state 69
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 53

   23 exp: NEW INT . LSBRACKET exp RSBRACKET

    LSBRACKET  shift, and go to state 70


State 54

   24 exp: NEW ID . LPBRACKET RPBRACKET

    LPBRACKET  shift, and go to state 71


State 55

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   22    | NOT exp .

    LESS  shift, and go to state 58
    STAR  shift, and go to state 63
    MOD   shift, and go to state 64

    $default  reduce using rule 22 (exp)


State 56

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON . RFBRACKET

    RFBRACKET  shift, and go to state 72


State 57

   20 exp: exp POINT . LENGTH

    LENGTH  shift, and go to state 73


State 58

   17 exp: exp LESS . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 74


State 59

   16 exp: exp OR . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 75


State 60

   15 exp: exp AND . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 76


State 61

   11 exp: exp PLUS . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 77


State 62

   12 exp: exp MINUS . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 78


State 63

   13 exp: exp STAR . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 79


State 64

   14 exp: exp MOD . exp

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 80


State 65

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   37 stat: PRINTLN LPBRACKET exp . RPBRACKET SEMICOLON

    RPBRACKET  shift, and go to state 81
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 66

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   39 stat: ID LSBRACKET exp . RSBRACKET ASSIGN exp SEMICOLON

    RSBRACKET  shift, and go to state 82
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 67

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   38 stat: ID ASSIGN exp . SEMICOLON

    SEMICOLON  shift, and go to state 83
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 68

   35 stat: IF LPBRACKET exp RPBRACKET . stat ELSE stat

    LFBRACKET  shift, and go to state 28
    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    PRINTLN    shift, and go to state 32
    ID         shift, and go to state 33

    stat  go to state 84


State 69

   36 stat: WHILE LPBRACKET exp RPBRACKET . stat

    LFBRACKET  shift, and go to state 28
    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    PRINTLN    shift, and go to state 32
    ID         shift, and go to state 33

    stat  go to state 85


State 70

   23 exp: NEW INT LSBRACKET . exp RSBRACKET

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 86


State 71

   24 exp: NEW ID LPBRACKET . RPBRACKET

    RPBRACKET  shift, and go to state 87


State 72

   33 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET .

    $default  reduce using rule 33 (methodDeclaration)


State 73

   20 exp: exp POINT LENGTH .

    $default  reduce using rule 20 (exp)


State 74

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   17    | exp LESS exp .
   20    | exp . POINT LENGTH

    LESS  error (nonassociative)

    $default  reduce using rule 17 (exp)


State 75

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   16    | exp OR exp .
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS   shift, and go to state 58
    AND    shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    STAR   shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 16 (exp)


State 76

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   15    | exp AND exp .
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS   shift, and go to state 58
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    STAR   shift, and go to state 63
    MOD    shift, and go to state 64

    $default  reduce using rule 15 (exp)


State 77

   11 exp: exp . PLUS exp
   11    | exp PLUS exp .
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS  shift, and go to state 58
    STAR  shift, and go to state 63
    MOD   shift, and go to state 64

    $default  reduce using rule 11 (exp)


State 78

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   12    | exp MINUS exp .
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS  shift, and go to state 58
    STAR  shift, and go to state 63
    MOD   shift, and go to state 64

    $default  reduce using rule 12 (exp)


State 79

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   13    | exp STAR exp .
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS  shift, and go to state 58

    $default  reduce using rule 13 (exp)


State 80

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   14    | exp MOD exp .
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH

    LESS  shift, and go to state 58

    $default  reduce using rule 14 (exp)


State 81

   37 stat: PRINTLN LPBRACKET exp RPBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 82

   39 stat: ID LSBRACKET exp RSBRACKET . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 89


State 83

   38 stat: ID ASSIGN exp SEMICOLON .

    $default  reduce using rule 38 (stat)


State 84

   35 stat: IF LPBRACKET exp RPBRACKET stat . ELSE stat

    ELSE  shift, and go to state 90


State 85

   36 stat: WHILE LPBRACKET exp RPBRACKET stat .

    $default  reduce using rule 36 (stat)


State 86

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   23    | NEW INT LSBRACKET exp . RSBRACKET

    RSBRACKET  shift, and go to state 91
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 87

   24 exp: NEW ID LPBRACKET RPBRACKET .

    $default  reduce using rule 24 (exp)


State 88

   37 stat: PRINTLN LPBRACKET exp RPBRACKET SEMICOLON .

    $default  reduce using rule 37 (stat)


State 89

   39 stat: ID LSBRACKET exp RSBRACKET ASSIGN . exp SEMICOLON

    TRUE             shift, and go to state 39
    FALSE            shift, and go to state 40
    NEW              shift, and go to state 41
    NOT              shift, and go to state 42
    INTEGER_LITERAL  shift, and go to state 43
    ID               shift, and go to state 44

    exp  go to state 92


State 90

   35 stat: IF LPBRACKET exp RPBRACKET stat ELSE . stat

    LFBRACKET  shift, and go to state 28
    IF         shift, and go to state 29
    WHILE      shift, and go to state 30
    PRINTLN    shift, and go to state 32
    ID         shift, and go to state 33

    stat  go to state 93


State 91

   23 exp: NEW INT LSBRACKET exp RSBRACKET .

    $default  reduce using rule 23 (exp)


State 92

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . STAR exp
   14    | exp . MOD exp
   15    | exp . AND exp
   16    | exp . OR exp
   17    | exp . LESS exp
   20    | exp . POINT LENGTH
   39 stat: ID LSBRACKET exp RSBRACKET ASSIGN exp . SEMICOLON

    SEMICOLON  shift, and go to state 94
    POINT      shift, and go to state 57
    LESS       shift, and go to state 58
    OR         shift, and go to state 59
    AND        shift, and go to state 60
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62
    STAR       shift, and go to state 63
    MOD        shift, and go to state 64


State 93

   35 stat: IF LPBRACKET exp RPBRACKET stat ELSE stat .

    $default  reduce using rule 35 (stat)


State 94

   39 stat: ID LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON .

    $default  reduce using rule 39 (stat)
