Terminals unused in grammar

   THIS
   END


Grammar

    0 $accept: input $end

    1 input: mainClass classDeclList

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    3 classDeclList: %empty
    4              | classDeclaration classDeclList

    5 classDeclaration: CLASS ID LFBRACKET varDeclList methodDeclList RFBRACKET
    6                 | CLASS ID EXTENDS ID LFBRACKET varDeclList methodDeclList RFBRACKET

    7 methodDeclList: %empty
    8               | methodDeclaration methodDeclList

    9 varDeclList: %empty
   10            | varDeclList typeName ID SEMICOLON

   11 paramList: %empty
   12          | nonEmptyParamList

   13 nonEmptyParamList: typeName ID
   14                  | nonEmptyParamList COMMA typeName ID

   15 exp: INTEGER_LITERAL
   16    | exp PLUS exp
   17    | exp MINUS exp
   18    | exp STAR exp
   19    | exp MOD exp
   20    | exp AND exp
   21    | exp OR exp
   22    | exp LESS exp
   23    | TRUE
   24    | FALSE
   25    | exp POINT LENGTH
   26    | ID
   27    | NOT exp
   28    | NEW INT LSBRACKET exp RSBRACKET
   29    | NEW ID LPBRACKET RPBRACKET

   30 statList: %empty
   31         | stat statList

   32 typeName: INT LSBRACKET RSBRACKET
   33         | BOOLEAN
   34         | INT
   35         | ID

   36 visibility: PUBLIC
   37           | PRIVATE

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

   39 stat: LFBRACKET statList RFBRACKET
   40     | IF LPBRACKET exp RPBRACKET stat ELSE stat
   41     | WHILE LPBRACKET exp RPBRACKET stat
   42     | PRINTLN LPBRACKET exp RPBRACKET SEMICOLON
   43     | ID ASSIGN exp SEMICOLON
   44     | ID LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
LPBRACKET (258) 2 29 38 40 41 42
RPBRACKET (259) 2 29 38 40 41 42
LFBRACKET (260) 2 5 6 38 39
RFBRACKET (261) 2 5 6 38 39
LSBRACKET (262) 2 28 32 44
RSBRACKET (263) 2 28 32 44
SEMICOLON (264) 10 38 42 43 44
PUBLIC (265) 2 36
PRIVATE (266) 37
STATIC (267) 2
INT (268) 28 32 34
BOOLEAN (269) 33
VOID (270) 2
STRING (271) 2
TRUE (272) 23
FALSE (273) 24
CLASS (274) 2 5 6
EXTENDS (275) 6
IF (276) 40
ELSE (277) 40
WHILE (278) 41
RETURN (279) 38
PRINTLN (280) 42
LENGTH (281) 25
THIS (282)
NEW (283) 28 29
MAIN (284) 2
POINT (285) 25
COMMA (286) 14
ASSIGN (287) 43 44
LESS (288) 22
OR (289) 21
AND (290) 20
NOT (291) 27
PLUS (292) 16
MINUS (293) 17
STAR (294) 18
END (295)
INTEGER_LITERAL (296) 15
ID (297) 2 5 6 10 13 14 26 29 35 38 43 44
MOD (298) 19
VAR_DECL_LIST (299)
METHOD_DECL (300)
STAT_LIST (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
input (48)
    on left: 1, on right: 0
mainClass (49)
    on left: 2, on right: 1
classDeclList (50)
    on left: 3 4, on right: 1 4
classDeclaration (51)
    on left: 5 6, on right: 4
methodDeclList (52)
    on left: 7 8, on right: 5 6 8
varDeclList (53)
    on left: 9 10, on right: 5 6 10 38
paramList (54)
    on left: 11 12, on right: 38
nonEmptyParamList (55)
    on left: 13 14, on right: 12 14
exp (56)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    16 17 18 19 20 21 22 25 27 28 38 40 41 42 43 44
statList (57)
    on left: 30 31, on right: 31 38 39
typeName (58)
    on left: 32 33 34 35, on right: 10 13 14 38
visibility (59)
    on left: 36 37, on right: 38
methodDeclaration (60)
    on left: 38, on right: 8
stat (61)
    on left: 39 40 41 42 43 44, on right: 2 31 40 41


State 0

    0 $accept: . input $end

    CLASS  shift, and go to state 1

    input      go to state 2
    mainClass  go to state 3


State 1

    2 mainClass: CLASS . ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    ID  shift, and go to state 4


State 2

    0 $accept: input . $end

    $end  shift, and go to state 5


State 3

    1 input: mainClass . classDeclList

    CLASS  shift, and go to state 6

    $default  reduce using rule 3 (classDeclList)

    classDeclList     go to state 7
    classDeclaration  go to state 8


State 4

    2 mainClass: CLASS ID . LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    LFBRACKET  shift, and go to state 9


State 5

    0 $accept: input $end .

    $default  accept


State 6

    5 classDeclaration: CLASS . ID LFBRACKET varDeclList methodDeclList RFBRACKET
    6                 | CLASS . ID EXTENDS ID LFBRACKET varDeclList methodDeclList RFBRACKET

    ID  shift, and go to state 10


State 7

    1 input: mainClass classDeclList .

    $default  reduce using rule 1 (input)


State 8

    4 classDeclList: classDeclaration . classDeclList

    CLASS  shift, and go to state 6

    $default  reduce using rule 3 (classDeclList)

    classDeclList     go to state 11
    classDeclaration  go to state 8


State 9

    2 mainClass: CLASS ID LFBRACKET . PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    PUBLIC  shift, and go to state 12


State 10

    5 classDeclaration: CLASS ID . LFBRACKET varDeclList methodDeclList RFBRACKET
    6                 | CLASS ID . EXTENDS ID LFBRACKET varDeclList methodDeclList RFBRACKET

    LFBRACKET  shift, and go to state 13
    EXTENDS    shift, and go to state 14


State 11

    4 classDeclList: classDeclaration classDeclList .

    $default  reduce using rule 4 (classDeclList)


State 12

    2 mainClass: CLASS ID LFBRACKET PUBLIC . STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    STATIC  shift, and go to state 15


State 13

    5 classDeclaration: CLASS ID LFBRACKET . varDeclList methodDeclList RFBRACKET

    $default  reduce using rule 9 (varDeclList)

    varDeclList  go to state 16


State 14

    6 classDeclaration: CLASS ID EXTENDS . ID LFBRACKET varDeclList methodDeclList RFBRACKET

    ID  shift, and go to state 17


State 15

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC . VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    VOID  shift, and go to state 18


State 16

    5 classDeclaration: CLASS ID LFBRACKET varDeclList . methodDeclList RFBRACKET
   10 varDeclList: varDeclList . typeName ID SEMICOLON

    PUBLIC   shift, and go to state 19
    PRIVATE  shift, and go to state 20
    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    ID       shift, and go to state 23

    $default  reduce using rule 7 (methodDeclList)

    methodDeclList     go to state 24
    typeName           go to state 25
    visibility         go to state 26
    methodDeclaration  go to state 27


State 17

    6 classDeclaration: CLASS ID EXTENDS ID . LFBRACKET varDeclList methodDeclList RFBRACKET

    LFBRACKET  shift, and go to state 28


State 18

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID . MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    MAIN  shift, and go to state 29


State 19

   36 visibility: PUBLIC .

    $default  reduce using rule 36 (visibility)


State 20

   37 visibility: PRIVATE .

    $default  reduce using rule 37 (visibility)


State 21

   32 typeName: INT . LSBRACKET RSBRACKET
   34         | INT .

    LSBRACKET  shift, and go to state 30

    $default  reduce using rule 34 (typeName)


State 22

   33 typeName: BOOLEAN .

    $default  reduce using rule 33 (typeName)


State 23

   35 typeName: ID .

    $default  reduce using rule 35 (typeName)


State 24

    5 classDeclaration: CLASS ID LFBRACKET varDeclList methodDeclList . RFBRACKET

    RFBRACKET  shift, and go to state 31


State 25

   10 varDeclList: varDeclList typeName . ID SEMICOLON

    ID  shift, and go to state 32


State 26

   38 methodDeclaration: visibility . typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    ID       shift, and go to state 23

    typeName  go to state 33


State 27

    8 methodDeclList: methodDeclaration . methodDeclList

    PUBLIC   shift, and go to state 19
    PRIVATE  shift, and go to state 20

    $default  reduce using rule 7 (methodDeclList)

    methodDeclList     go to state 34
    visibility         go to state 26
    methodDeclaration  go to state 27


State 28

    6 classDeclaration: CLASS ID EXTENDS ID LFBRACKET . varDeclList methodDeclList RFBRACKET

    $default  reduce using rule 9 (varDeclList)

    varDeclList  go to state 35


State 29

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN . LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    LPBRACKET  shift, and go to state 36


State 30

   32 typeName: INT LSBRACKET . RSBRACKET

    RSBRACKET  shift, and go to state 37


State 31

    5 classDeclaration: CLASS ID LFBRACKET varDeclList methodDeclList RFBRACKET .

    $default  reduce using rule 5 (classDeclaration)


State 32

   10 varDeclList: varDeclList typeName ID . SEMICOLON

    SEMICOLON  shift, and go to state 38


State 33

   38 methodDeclaration: visibility typeName . ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    ID  shift, and go to state 39


State 34

    8 methodDeclList: methodDeclaration methodDeclList .

    $default  reduce using rule 8 (methodDeclList)


State 35

    6 classDeclaration: CLASS ID EXTENDS ID LFBRACKET varDeclList . methodDeclList RFBRACKET
   10 varDeclList: varDeclList . typeName ID SEMICOLON

    PUBLIC   shift, and go to state 19
    PRIVATE  shift, and go to state 20
    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    ID       shift, and go to state 23

    $default  reduce using rule 7 (methodDeclList)

    methodDeclList     go to state 40
    typeName           go to state 25
    visibility         go to state 26
    methodDeclaration  go to state 27


State 36

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET . STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    STRING  shift, and go to state 41


State 37

   32 typeName: INT LSBRACKET RSBRACKET .

    $default  reduce using rule 32 (typeName)


State 38

   10 varDeclList: varDeclList typeName ID SEMICOLON .

    $default  reduce using rule 10 (varDeclList)


State 39

   38 methodDeclaration: visibility typeName ID . LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    LPBRACKET  shift, and go to state 42


State 40

    6 classDeclaration: CLASS ID EXTENDS ID LFBRACKET varDeclList methodDeclList . RFBRACKET

    RFBRACKET  shift, and go to state 43


State 41

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING . LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    LSBRACKET  shift, and go to state 44


State 42

   38 methodDeclaration: visibility typeName ID LPBRACKET . paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    ID       shift, and go to state 23

    $default  reduce using rule 11 (paramList)

    paramList          go to state 45
    nonEmptyParamList  go to state 46
    typeName           go to state 47


State 43

    6 classDeclaration: CLASS ID EXTENDS ID LFBRACKET varDeclList methodDeclList RFBRACKET .

    $default  reduce using rule 6 (classDeclaration)


State 44

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET . RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    RSBRACKET  shift, and go to state 48


State 45

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList . RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    RPBRACKET  shift, and go to state 49


State 46

   12 paramList: nonEmptyParamList .
   14 nonEmptyParamList: nonEmptyParamList . COMMA typeName ID

    COMMA  shift, and go to state 50

    $default  reduce using rule 12 (paramList)


State 47

   13 nonEmptyParamList: typeName . ID

    ID  shift, and go to state 51


State 48

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET . ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    ID  shift, and go to state 52


State 49

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET . LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET

    LFBRACKET  shift, and go to state 53


State 50

   14 nonEmptyParamList: nonEmptyParamList COMMA . typeName ID

    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    ID       shift, and go to state 23

    typeName  go to state 54


State 51

   13 nonEmptyParamList: typeName ID .

    $default  reduce using rule 13 (nonEmptyParamList)


State 52

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID . RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET

    RPBRACKET  shift, and go to state 55


State 53

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET . varDeclList statList RETURN exp SEMICOLON RFBRACKET

    $default  reduce using rule 9 (varDeclList)

    varDeclList  go to state 56


State 54

   14 nonEmptyParamList: nonEmptyParamList COMMA typeName . ID

    ID  shift, and go to state 57


State 55

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET . LFBRACKET stat RFBRACKET RFBRACKET

    LFBRACKET  shift, and go to state 58


State 56

   10 varDeclList: varDeclList . typeName ID SEMICOLON
   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList . statList RETURN exp SEMICOLON RFBRACKET

    LFBRACKET  shift, and go to state 59
    INT        shift, and go to state 21
    BOOLEAN    shift, and go to state 22
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 63

    $default  reduce using rule 30 (statList)

    statList  go to state 64
    typeName  go to state 25
    stat      go to state 65


State 57

   14 nonEmptyParamList: nonEmptyParamList COMMA typeName ID .

    $default  reduce using rule 14 (nonEmptyParamList)


State 58

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET . stat RFBRACKET RFBRACKET

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    stat  go to state 67


State 59

   39 stat: LFBRACKET . statList RFBRACKET

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    $default  reduce using rule 30 (statList)

    statList  go to state 68
    stat      go to state 65


State 60

   40 stat: IF . LPBRACKET exp RPBRACKET stat ELSE stat

    LPBRACKET  shift, and go to state 69


State 61

   41 stat: WHILE . LPBRACKET exp RPBRACKET stat

    LPBRACKET  shift, and go to state 70


State 62

   42 stat: PRINTLN . LPBRACKET exp RPBRACKET SEMICOLON

    LPBRACKET  shift, and go to state 71


State 63

   35 typeName: ID .
   43 stat: ID . ASSIGN exp SEMICOLON
   44     | ID . LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON

    LSBRACKET  shift, and go to state 72
    ASSIGN     shift, and go to state 73

    $default  reduce using rule 35 (typeName)


State 64

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList . RETURN exp SEMICOLON RFBRACKET

    RETURN  shift, and go to state 74


State 65

   31 statList: stat . statList

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    $default  reduce using rule 30 (statList)

    statList  go to state 75
    stat      go to state 65


State 66

   43 stat: ID . ASSIGN exp SEMICOLON
   44     | ID . LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON

    LSBRACKET  shift, and go to state 72
    ASSIGN     shift, and go to state 73


State 67

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat . RFBRACKET RFBRACKET

    RFBRACKET  shift, and go to state 76


State 68

   39 stat: LFBRACKET statList . RFBRACKET

    RFBRACKET  shift, and go to state 77


State 69

   40 stat: IF LPBRACKET . exp RPBRACKET stat ELSE stat

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 84


State 70

   41 stat: WHILE LPBRACKET . exp RPBRACKET stat

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 85


State 71

   42 stat: PRINTLN LPBRACKET . exp RPBRACKET SEMICOLON

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 86


State 72

   44 stat: ID LSBRACKET . exp RSBRACKET ASSIGN exp SEMICOLON

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 87


State 73

   43 stat: ID ASSIGN . exp SEMICOLON

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 88


State 74

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN . exp SEMICOLON RFBRACKET

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 89


State 75

   31 statList: stat statList .

    $default  reduce using rule 31 (statList)


State 76

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET . RFBRACKET

    RFBRACKET  shift, and go to state 90


State 77

   39 stat: LFBRACKET statList RFBRACKET .

    $default  reduce using rule 39 (stat)


State 78

   23 exp: TRUE .

    $default  reduce using rule 23 (exp)


State 79

   24 exp: FALSE .

    $default  reduce using rule 24 (exp)


State 80

   28 exp: NEW . INT LSBRACKET exp RSBRACKET
   29    | NEW . ID LPBRACKET RPBRACKET

    INT  shift, and go to state 91
    ID   shift, and go to state 92


State 81

   27 exp: NOT . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 93


State 82

   15 exp: INTEGER_LITERAL .

    $default  reduce using rule 15 (exp)


State 83

   26 exp: ID .

    $default  reduce using rule 26 (exp)


State 84

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   40 stat: IF LPBRACKET exp . RPBRACKET stat ELSE stat

    RPBRACKET  shift, and go to state 94
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 85

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   41 stat: WHILE LPBRACKET exp . RPBRACKET stat

    RPBRACKET  shift, and go to state 103
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 86

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   42 stat: PRINTLN LPBRACKET exp . RPBRACKET SEMICOLON

    RPBRACKET  shift, and go to state 104
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 87

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   44 stat: ID LSBRACKET exp . RSBRACKET ASSIGN exp SEMICOLON

    RSBRACKET  shift, and go to state 105
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 88

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   43 stat: ID ASSIGN exp . SEMICOLON

    SEMICOLON  shift, and go to state 106
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 89

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp . SEMICOLON RFBRACKET

    SEMICOLON  shift, and go to state 107
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 90

    2 mainClass: CLASS ID LFBRACKET PUBLIC STATIC VOID MAIN LPBRACKET STRING LSBRACKET RSBRACKET ID RPBRACKET LFBRACKET stat RFBRACKET RFBRACKET .

    $default  reduce using rule 2 (mainClass)


State 91

   28 exp: NEW INT . LSBRACKET exp RSBRACKET

    LSBRACKET  shift, and go to state 108


State 92

   29 exp: NEW ID . LPBRACKET RPBRACKET

    LPBRACKET  shift, and go to state 109


State 93

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   27    | NOT exp .

    LESS  shift, and go to state 96
    STAR  shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 27 (exp)


State 94

   40 stat: IF LPBRACKET exp RPBRACKET . stat ELSE stat

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    stat  go to state 110


State 95

   25 exp: exp POINT . LENGTH

    LENGTH  shift, and go to state 111


State 96

   22 exp: exp LESS . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 112


State 97

   21 exp: exp OR . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 113


State 98

   20 exp: exp AND . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 114


State 99

   16 exp: exp PLUS . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 115


State 100

   17 exp: exp MINUS . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 116


State 101

   18 exp: exp STAR . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 117


State 102

   19 exp: exp MOD . exp

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 118


State 103

   41 stat: WHILE LPBRACKET exp RPBRACKET . stat

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    stat  go to state 119


State 104

   42 stat: PRINTLN LPBRACKET exp RPBRACKET . SEMICOLON

    SEMICOLON  shift, and go to state 120


State 105

   44 stat: ID LSBRACKET exp RSBRACKET . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 121


State 106

   43 stat: ID ASSIGN exp SEMICOLON .

    $default  reduce using rule 43 (stat)


State 107

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON . RFBRACKET

    RFBRACKET  shift, and go to state 122


State 108

   28 exp: NEW INT LSBRACKET . exp RSBRACKET

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 123


State 109

   29 exp: NEW ID LPBRACKET . RPBRACKET

    RPBRACKET  shift, and go to state 124


State 110

   40 stat: IF LPBRACKET exp RPBRACKET stat . ELSE stat

    ELSE  shift, and go to state 125


State 111

   25 exp: exp POINT LENGTH .

    $default  reduce using rule 25 (exp)


State 112

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   22    | exp LESS exp .
   25    | exp . POINT LENGTH

    LESS  error (nonassociative)

    $default  reduce using rule 22 (exp)


State 113

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   21    | exp OR exp .
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS   shift, and go to state 96
    AND    shift, and go to state 98
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 21 (exp)


State 114

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   20    | exp AND exp .
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS   shift, and go to state 96
    PLUS   shift, and go to state 99
    MINUS  shift, and go to state 100
    STAR   shift, and go to state 101
    MOD    shift, and go to state 102

    $default  reduce using rule 20 (exp)


State 115

   16 exp: exp . PLUS exp
   16    | exp PLUS exp .
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS  shift, and go to state 96
    STAR  shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 16 (exp)


State 116

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   17    | exp MINUS exp .
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS  shift, and go to state 96
    STAR  shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 17 (exp)


State 117

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   18    | exp STAR exp .
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS  shift, and go to state 96

    $default  reduce using rule 18 (exp)


State 118

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   19    | exp MOD exp .
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH

    LESS  shift, and go to state 96

    $default  reduce using rule 19 (exp)


State 119

   41 stat: WHILE LPBRACKET exp RPBRACKET stat .

    $default  reduce using rule 41 (stat)


State 120

   42 stat: PRINTLN LPBRACKET exp RPBRACKET SEMICOLON .

    $default  reduce using rule 42 (stat)


State 121

   44 stat: ID LSBRACKET exp RSBRACKET ASSIGN . exp SEMICOLON

    TRUE             shift, and go to state 78
    FALSE            shift, and go to state 79
    NEW              shift, and go to state 80
    NOT              shift, and go to state 81
    INTEGER_LITERAL  shift, and go to state 82
    ID               shift, and go to state 83

    exp  go to state 126


State 122

   38 methodDeclaration: visibility typeName ID LPBRACKET paramList RPBRACKET LFBRACKET varDeclList statList RETURN exp SEMICOLON RFBRACKET .

    $default  reduce using rule 38 (methodDeclaration)


State 123

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   28    | NEW INT LSBRACKET exp . RSBRACKET

    RSBRACKET  shift, and go to state 127
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 124

   29 exp: NEW ID LPBRACKET RPBRACKET .

    $default  reduce using rule 29 (exp)


State 125

   40 stat: IF LPBRACKET exp RPBRACKET stat ELSE . stat

    LFBRACKET  shift, and go to state 59
    IF         shift, and go to state 60
    WHILE      shift, and go to state 61
    PRINTLN    shift, and go to state 62
    ID         shift, and go to state 66

    stat  go to state 128


State 126

   16 exp: exp . PLUS exp
   17    | exp . MINUS exp
   18    | exp . STAR exp
   19    | exp . MOD exp
   20    | exp . AND exp
   21    | exp . OR exp
   22    | exp . LESS exp
   25    | exp . POINT LENGTH
   44 stat: ID LSBRACKET exp RSBRACKET ASSIGN exp . SEMICOLON

    SEMICOLON  shift, and go to state 129
    POINT      shift, and go to state 95
    LESS       shift, and go to state 96
    OR         shift, and go to state 97
    AND        shift, and go to state 98
    PLUS       shift, and go to state 99
    MINUS      shift, and go to state 100
    STAR       shift, and go to state 101
    MOD        shift, and go to state 102


State 127

   28 exp: NEW INT LSBRACKET exp RSBRACKET .

    $default  reduce using rule 28 (exp)


State 128

   40 stat: IF LPBRACKET exp RPBRACKET stat ELSE stat .

    $default  reduce using rule 40 (stat)


State 129

   44 stat: ID LSBRACKET exp RSBRACKET ASSIGN exp SEMICOLON .

    $default  reduce using rule 44 (stat)
